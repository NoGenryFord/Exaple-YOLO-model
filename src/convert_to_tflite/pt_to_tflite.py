"""
–ü—Ä—è–º–∏–π –µ–∫—Å–ø–æ—Ä—Ç YOLOv8 .pt –º–æ–¥–µ–ª—ñ –≤ TensorFlow Lite —Ñ–æ—Ä–º–∞—Ç
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î ultralytics YOLO –¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ—ó –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó
"""

from ultralytics import YOLO
import os

def convert_pt_to_tflite():
    """–ö–æ–Ω–≤–µ—Ä—Ç—É—î PyTorch –º–æ–¥–µ–ª—å YOLO –≤ TensorFlow Lite"""
    
    # –®–ª—è—Ö–∏ –¥–æ —Ñ–∞–π–ª—ñ–≤
    pt_model_path = "weights/YOLO/model_3_best.pt"
    output_dir = "weights/YOLO/"
    
    print(f"–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ PyTorch –º–æ–¥–µ–ª—å: {pt_model_path}")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î —Ñ–∞–π–ª
    if not os.path.exists(pt_model_path):
        print(f"‚ùå –§–∞–π–ª {pt_model_path} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
        return False
        
    try:
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–æ–¥–µ–ª—å
        model = YOLO(pt_model_path)
        
        print("üîÑ –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥–µ–ª—å –≤ TensorFlow Lite...")
        
        # –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –≤ TFLite (–±–µ–∑ INT8 –∫–≤–∞–Ω—Ç–∏–∑–∞—Ü—ñ—ó, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π)
        tflite_path = model.export(
            format='tflite',
            int8=False,  # –í–∏–º–∫–Ω–µ–Ω–∞ INT8 –∫–≤–∞–Ω—Ç–∏–∑–∞—Ü—ñ—è
            optimize=True,
            dynamic=False,
            simplify=True
        )
        
        print(f"‚úÖ TensorFlow Lite –º–æ–¥–µ–ª—å –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {tflite_path}")
        
        # –ö–æ–ø—ñ—é—î–º–æ –¥–æ –Ω–∞—à–æ—ó –ø–∞–ø–∫–∏ –∑ –±—ñ–ª—å—à –∑—Ä–æ–∑—É–º—ñ–ª–æ—é –Ω–∞–∑–≤–æ—é
        target_path = os.path.join(output_dir, "model_3_best.tflite")
        if os.path.exists(tflite_path) and tflite_path != target_path:
            import shutil
            shutil.copy2(tflite_path, target_path)
            print(f"‚úÖ –ú–æ–¥–µ–ª—å —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ –¥–æ: {target_path}")
            
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –µ–∫—Å–ø–æ—Ä—Ç—É: {str(e)}")
        return False

if __name__ == "__main__":
    print("=== –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è PyTorch ‚Üí TensorFlow Lite ===")
    success = convert_pt_to_tflite()
    
    if success:
        print("\nüéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!")
        print("–¢–µ–ø–µ—Ä –º–æ–∂–Ω–∞ –æ–Ω–æ–≤–∏—Ç–∏ main.py –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ TFLite –º–æ–¥–µ–ª–ª—é.")
    else:
        print("\n‚ùå –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è –Ω–µ –≤–¥–∞–ª–∞—Å—è. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ–º–∏–ª–∫–∏ –≤–∏—â–µ.")
