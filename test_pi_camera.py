#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä—ñ–∑–Ω–∏—Ö –º–µ—Ç–æ–¥—ñ–≤ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Raspberry Pi –∫–∞–º–µ—Ä–∏
–î–æ–ø–æ–º–∞–≥–∞—î –≤–∏–∑–Ω–∞—á–∏—Ç–∏, —è–∫–∏–π –º–µ—Ç–æ–¥ –ø—Ä–∞—Ü—é—î –Ω–∞ –≤–∞—à—ñ–π —Å–∏—Å—Ç–µ–º—ñ
"""

import cv2 as cv
import subprocess
import os
import time

def test_rpicam_hello():
    """–¢–µ—Å—Ç—É—î –±–∞–∑–æ–≤—É —Ä–æ–±–æ—Ç—É rpicam-hello"""
    print("\nüß™ –¢–µ—Å—Ç 1: rpicam-hello")
    try:
        result = subprocess.run(
            ["rpicam-hello", "--timeout", "2000"],
            capture_output=True,
            text=True,
            timeout=10
        )
        if result.returncode == 0:
            print("‚úÖ rpicam-hello –ø—Ä–∞—Ü—é—î")
            return True
        else:
            print(f"‚ùå rpicam-hello –ø–æ–º–∏–ª–∫–∞: {result.stderr}")
            return False
    except FileNotFoundError:
        print("‚ùå rpicam-hello –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å: sudo apt install camera-utils")
        return False
    except subprocess.TimeoutExpired:
        print("‚ö†Ô∏è rpicam-hello –∑–∞–≤–∏—Å–ª–æ")
        return False

def test_dev_video():
    """–¢–µ—Å—Ç—É—î /dev/video0"""
    print("\nüß™ –¢–µ—Å—Ç 2: /dev/video0")
    if os.path.exists("/dev/video0"):
        print("‚úÖ /dev/video0 —ñ—Å–Ω—É—î")
        cap = cv.VideoCapture("/dev/video0")
        if cap.isOpened():
            ret, frame = cap.read()
            cap.release()
            if ret:
                print("‚úÖ /dev/video0 –ø—Ä–∞—Ü—é—î")
                return True
            else:
                print("‚ùå /dev/video0 –Ω–µ –º–æ–∂–µ –∑—á–∏—Ç–∞—Ç–∏ –∫–∞–¥—Ä")
                return False
        else:
            print("‚ùå /dev/video0 –Ω–µ –º–æ–∂–µ –≤—ñ–¥–∫—Ä–∏—Ç–∏—Å—è")
            return False
    else:
        print("‚ùå /dev/video0 –Ω–µ —ñ—Å–Ω—É—î")
        return False

def test_gstreamer():
    """–¢–µ—Å—Ç—É—î GStreamer"""
    print("\nüß™ –¢–µ—Å—Ç 3: GStreamer")
    try:
        cap = cv.VideoCapture(
            "v4l2src device=/dev/video0 ! videoconvert ! appsink",
            cv.CAP_GSTREAMER
        )
        if cap.isOpened():
            ret, frame = cap.read()
            cap.release()
            if ret:
                print("‚úÖ GStreamer –ø—Ä–∞—Ü—é—î")
                return True
            else:
                print("‚ùå GStreamer –Ω–µ –º–æ–∂–µ –∑—á–∏—Ç–∞—Ç–∏ –∫–∞–¥—Ä")
                return False
        else:
            print("‚ùå GStreamer –Ω–µ –º–æ–∂–µ –≤—ñ–¥–∫—Ä–∏—Ç–∏—Å—è")
            return False
    except Exception as e:
        print(f"‚ùå GStreamer –ø–æ–º–∏–ª–∫–∞: {e}")
        return False

def test_rpicam_vid_pipe():
    """–¢–µ—Å—Ç—É—î rpicam-vid —á–µ—Ä–µ–∑ named pipe"""
    print("\nüß™ –¢–µ—Å—Ç 4: rpicam-vid —á–µ—Ä–µ–∑ named pipe")
    pipe_path = "/tmp/test_rpicam_pipe"
    
    try:
        # –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–∏–π pipe
        if os.path.exists(pipe_path):
            os.unlink(pipe_path)
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ named pipe
        os.mkfifo(pipe_path)
        print(f"üì° –°—Ç–≤–æ—Ä–µ–Ω–æ pipe: {pipe_path}")
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ rpicam-vid
        cmd = [
            "rpicam-vid",
            "--timeout", "5000",  # 5 —Å–µ–∫—É–Ω–¥
            "--width", "640",
            "--height", "480",
            "--framerate", "15",
            "--output", pipe_path,
            "--codec", "mjpeg",
            "--inline"
        ]
        
        print(f"üöÄ –ó–∞–ø—É—Å–∫–∞—î–º–æ: {' '.join(cmd)}")
        process = subprocess.Popen(cmd)
        
        # –ß–µ–∫–∞—î–º–æ —Ç—Ä–æ—Ö–∏
        time.sleep(2)
        
        # –°–ø—Ä–æ–±—É—î–º–æ –≤—ñ–¥–∫—Ä–∏—Ç–∏ pipe
        cap = cv.VideoCapture(pipe_path)
        success = False
        
        if cap.isOpened():
            print("‚úÖ Pipe –≤—ñ–¥–∫—Ä–∏—Ç–∏–π, —á–∏—Ç–∞—î–º–æ –∫–∞–¥—Ä–∏...")
            for i in range(10):  # –°–ø—Ä–æ–±—É—î–º–æ –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ 10 –∫–∞–¥—Ä—ñ–≤
                ret, frame = cap.read()
                if ret:
                    print(f"‚úÖ –ö–∞–¥—Ä {i+1} –ø—Ä–æ—á–∏—Ç–∞–Ω–æ")
                    success = True
                    break
                time.sleep(0.1)
        
        cap.release()
        process.terminate()
        process.wait()
        
        # –û—á–∏—â—É—î–º–æ
        if os.path.exists(pipe_path):
            os.unlink(pipe_path)
        
        if success:
            print("‚úÖ rpicam-vid —á–µ—Ä–µ–∑ named pipe –ø—Ä–∞—Ü—é—î")
            return True
        else:
            print("‚ùå rpicam-vid —á–µ—Ä–µ–∑ named pipe –Ω–µ –ø—Ä–∞—Ü—é—î")
            return False
            
    except FileNotFoundError:
        print("‚ùå rpicam-vid –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return False
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ rpicam-vid: {e}")
        return False

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è"""
    print("üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –º–µ—Ç–æ–¥—ñ–≤ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Raspberry Pi –∫–∞–º–µ—Ä–∏")
    print("=" * 60)
    
    results = {}
    
    # –¢–µ—Å—Ç—É—î–º–æ –≤—Å—ñ –º–µ—Ç–æ–¥–∏
    results["rpicam-hello"] = test_rpicam_hello()
    results["/dev/video0"] = test_dev_video()
    results["gstreamer"] = test_gstreamer()
    results["rpicam-vid pipe"] = test_rpicam_vid_pipe()
    
    # –í–∏–≤–æ–¥–∏–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–ò –¢–ï–°–¢–£–í–ê–ù–ù–Ø:")
    print("=" * 60)
    
    working_methods = []
    for method, success in results.items():
        status = "‚úÖ –ü–†–ê–¶–Æ–Ñ" if success else "‚ùå –ù–ï –ü–†–ê–¶–Æ–Ñ"
        print(f"{method:20} : {status}")
        if success:
            working_methods.append(method)
    
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á:")
    if working_methods:
        print(f"‚úÖ –ü—Ä–∞—Ü—é—é—á—ñ –º–µ—Ç–æ–¥–∏: {', '.join(working_methods)}")
        if "rpicam-vid pipe" in working_methods:
            print("üéØ –†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ rpicam-vid —á–µ—Ä–µ–∑ named pipe")
        elif "/dev/video0" in working_methods:
            print("üéØ –†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ /dev/video0")
        elif "gstreamer" in working_methods:
            print("üéØ –†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ GStreamer")
    else:
        print("‚ùå –ñ–æ–¥–µ–Ω –º–µ—Ç–æ–¥ –Ω–µ –ø—Ä–∞—Ü—é—î!")
        print("üí° –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ:")
        print("   1. –ö–∞–º–µ—Ä–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∞ —Ç–∞ —É–≤—ñ–º–∫–Ω–µ–Ω–∞")
        print("   2. sudo raspi-config -> Interface Options -> Camera -> Enable")
        print("   3. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ Raspberry Pi")
        print("   4. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å: sudo apt install camera-utils")

if __name__ == "__main__":
    main()
